---
description: |
  Rules for Cursor agents to build Kristina's academic success dashboard.
  These rules should guide the agent when executing tasks generated by Plan Mode
  and running in Background Agents.  They define the permitted tech stack,
  scope of work, and style guidelines.
globs:
  - "*"
alwaysApply: true
---

# Agent Execution Rules

## Task Scope

- Base all work on the official course syllabus and pacing guides for **MAT 143** and **ENG 111**.  Only implement features that support academic success and executive‑function needs.
- Remove outdated prototypes, unused scripts, duplicate pages, and any code within the `_archived/` directory.
- Focus on the core sections: 
  1. **Dashboard:** Overview of both courses with progress tracking and upcoming deadlines.
  2. **Calendar:** A 16‑week timeline populated with real dates (tests, assignments, labs, attendance, signature assignment, and withdrawal deadlines).
  3. **Math Tutor:** Chapter pages with concise overviews, formula sheets, step‑by‑step tutorials, practice problems, and AI‑powered explanations.
  4. **Writing Coach:** Essay requirements, rubrics, writing strategies, and assignment trackers for ENG 111.
  5. **Resource Center:** Central location for formula lookup, writing resources, external links, study strategies, and time management tips.

## Tech Stack

- **Frontend:** Use **vanilla HTML, CSS, and JavaScript**.  Do **not** introduce heavy frameworks (React, Vue, etc.).
- **Styling:** Use **Tailwind CSS** with a custom design system defined in `src/styles/` and `tokens.json`.  Apply semantic color tokens (math green, English blue, warning red, success green) and consistent font weights.
- **Icons & Fonts:** Use **Lucide icons** for user interface elements and **Vend Sans** (via Google Fonts) for typography.
- **Backend/API:** Implement AI tutor functions in **Python** under the `api/` directory.  Use the Anthropic Claude API via the `anthropic` Python package.  Install dependencies with `pip install -r requirements.txt`.

## Style Guidelines

- Write **semantic HTML** with proper heading hierarchy, ARIA labels, and alt text.
- Design for **mobile‑first** and ensure **WCAG 2.1 AA compliance**.  Maintain high contrast ratios and responsive layouts.
- Break content into **digestible sections**, using headings, bullet lists, and collapsible panels to support users with ADHD.
- Keep design **minimal**; avoid unnecessary animations or visual clutter.  Use consistent padding, spacing, and component styles.
- Name files and components predictably and document your work with comments where appropriate.

## Implementation Guidelines

- Follow the **file structure** defined in the plan.  Do not scatter related code across unrelated directories.
- When implementing the **calendar**, include the full semester schedule (Aug 18 – Dec 12, 2025) with accurate test dates, assignment due dates, labs, attendance requirements, the signature assignment, EVA deadline, withdrawal date, and final exam.  Provide filters by course and urgency (red/orange/green coding).
- For **chapter pages**, ensure every chapter of MAT 143 is covered.  Include any missing formulas identified in the gap analysis (e.g., APY, present/future value, standard divisor/quota, expected value).  Provide interactive practice problems where possible.
- For **writing pages**, include essay prompts, rubrics, citation guides, and revision checklists.  Link to critical reading and research resources.
- Populate the **resource center** with quick access to mathematical formulas, writing guides, external resources (Hawkes Learning, Brightspace), and study tips.
- Use **API endpoints** to call the Anthropic Claude model.  Provide fallback responses when the API key is missing or rate‑limited.

## Restrictions

- Do **not** introduce features unrelated to academic success (e.g., social sharing, gamification).
- Do **not** include heavy JavaScript frameworks or additional dependencies unless explicitly requested by the plan.
- Do **not** commit system‑level configuration files (e.g., Dockerfiles) unless they are part of the specified environment setup.